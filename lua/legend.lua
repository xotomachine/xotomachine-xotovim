-- require('legendary').setup({
-- 	keymaps = {
-- 	  { '<leader>ff', ':Telescope find_files', description = 'Find files' },
-- 	  { '<leader>h', function() print('hello world!') end, description = 'Say hello', },
-- 	  { '<leader>s', ':SomeCommand<CR>', description = 'Non-silent keymap', opts = { silent = false } },
-- 	  { '<leader>c', { n = ':LinewiseCommentToggle<CR>', x = ":'<,'>BlockwiseCommentToggle<CR>" }, description = 'Toggle comment', },
-- 	  { itemgroup = 'short ID', description = 'A submenu of items...', icon = '', keymaps = { }, },
-- 	},
-- 	commands = {
-- 	  { ':SayHello', function() print('hello world!') end, description = 'Say hello as a command', },
-- 	  { itemgroup = 'short ID', commands = { }, },
-- 	},
-- 	funcs = {
-- 	  { function() doSomeStuff() end, description = 'Do some stuff with a Lua function!', },
-- 	  { itemgroup = 'short ID', funcs = { }, },
-- 	},
-- 	autocmds = {
-- 	  { 'BufWritePre', vim.lsp.buf.format, description = 'Format on save' },
-- 	  { name = 'MyAugroup', clear = true, },
-- 	},
	
-- 	itemgroups = {},
	
-- 	default_opts = {
-- 		keymaps = {},
-- 		commands = {},
-- 		autocmds = {},
-- 	},
	
-- 	select_prompt = ' legendary.nvim ',
-- 	col_separator_char = '│',
-- 	default_item_formatter = nil,
-- 	include_builtin = true,
-- 	include_legendary_cmds = true,
-- 	sort = {
-- 		most_recent_first = true,
-- 		user_items_first = true,
-- 		item_type_bias = nil,
-- 		frecency = {
-- 			db_root = string.format('%s/legendary/', vim.fn.stdpath('data')),
-- 			max_timestamps = 10,
-- 		},
-- 	},
-- 	which_key = {
-- 		auto_register = false,
-- 		mappings = {},
-- 		opts = {},
-- 		do_binding = true,
-- 	},
-- 	scratchpad = {
-- 		view = 'float',
-- 		results_view = 'float',
-- 		float_border = 'rounded',
-- 		keep_contents = true,
-- 	},
-- 	cache_path = string.format('%s/legendary/', vim.fn.stdpath('cache')),
-- 	log_level = 'info',
--   })